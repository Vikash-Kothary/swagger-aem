//
// CustomAPI.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Alamofire



public class CustomAPI: APIBase {
    /**

     - parameter tags: (query)  (optional)
     - parameter combineTagsOr: (query)  (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func getAemHealthCheck(tags tags: String? = nil, combineTagsOr: Bool? = nil, completion: ((data: String?, error: ErrorType?) -> Void)) {
        getAemHealthCheckWithRequestBuilder(tags: tags, combineTagsOr: combineTagsOr).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     - GET /system/health     - BASIC:
       - type: http
       - name: aemAuth
     - parameter tags: (query)  (optional)
     - parameter combineTagsOr: (query)  (optional)

     - returns: RequestBuilder<String> 
     */
    public class func getAemHealthCheckWithRequestBuilder(tags tags: String? = nil, combineTagsOr: Bool? = nil) -> RequestBuilder<String> {
        let path = "/system/health"
        let URLString = OpenAPIClientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [
            "tags": tags,
            "combineTagsOr": combineTagsOr
        ]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<String>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: convertedParameters, isBody: false)
    }

    /**

     - parameter bundlesIgnored: (query)  (optional)
     - parameter bundlesIgnoredTypeHint: (query)  (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func postConfigAemHealthCheckServlet(bundlesIgnored bundlesIgnored: [String]? = nil, bundlesIgnoredTypeHint: String? = nil, completion: ((error: ErrorType?) -> Void)) {
        postConfigAemHealthCheckServletWithRequestBuilder(bundlesIgnored: bundlesIgnored, bundlesIgnoredTypeHint: bundlesIgnoredTypeHint).execute { (response, error) -> Void in
            completion(error: error);
        }
    }


    /**
     - POST /apps/system/config/com.shinesolutions.healthcheck.hc.impl.ActiveBundleHealthCheck     - BASIC:
       - type: http
       - name: aemAuth
     - parameter bundlesIgnored: (query)  (optional)
     - parameter bundlesIgnoredTypeHint: (query)  (optional)

     - returns: RequestBuilder<Void> 
     */
    public class func postConfigAemHealthCheckServletWithRequestBuilder(bundlesIgnored bundlesIgnored: [String]? = nil, bundlesIgnoredTypeHint: String? = nil) -> RequestBuilder<Void> {
        let path = "/apps/system/config/com.shinesolutions.healthcheck.hc.impl.ActiveBundleHealthCheck"
        let URLString = OpenAPIClientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [
            "bundles.ignored": bundlesIgnored,
            "bundles.ignored@TypeHint": bundlesIgnoredTypeHint
        ]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<Void>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: URLString, parameters: convertedParameters, isBody: false)
    }

    /**

     - parameter pwdresetAuthorizables: (query)  (optional)
     - parameter pwdresetAuthorizablesTypeHint: (query)  (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func postConfigAemPasswordReset(pwdresetAuthorizables pwdresetAuthorizables: [String]? = nil, pwdresetAuthorizablesTypeHint: String? = nil, completion: ((error: ErrorType?) -> Void)) {
        postConfigAemPasswordResetWithRequestBuilder(pwdresetAuthorizables: pwdresetAuthorizables, pwdresetAuthorizablesTypeHint: pwdresetAuthorizablesTypeHint).execute { (response, error) -> Void in
            completion(error: error);
        }
    }


    /**
     - POST /apps/system/config/com.shinesolutions.aem.passwordreset.Activator     - BASIC:
       - type: http
       - name: aemAuth
     - parameter pwdresetAuthorizables: (query)  (optional)
     - parameter pwdresetAuthorizablesTypeHint: (query)  (optional)

     - returns: RequestBuilder<Void> 
     */
    public class func postConfigAemPasswordResetWithRequestBuilder(pwdresetAuthorizables pwdresetAuthorizables: [String]? = nil, pwdresetAuthorizablesTypeHint: String? = nil) -> RequestBuilder<Void> {
        let path = "/apps/system/config/com.shinesolutions.aem.passwordreset.Activator"
        let URLString = OpenAPIClientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [
            "pwdreset.authorizables": pwdresetAuthorizables,
            "pwdreset.authorizables@TypeHint": pwdresetAuthorizablesTypeHint
        ]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<Void>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: URLString, parameters: convertedParameters, isBody: false)
    }

}
