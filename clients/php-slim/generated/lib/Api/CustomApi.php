<?php
/**
 * CustomApi
 *
 * PHP version 5
 *
 * @category Class
 * @package  OpenAPIServer\Api
 * @author   OpenAPI Generator team
 * @link     https://github.com/openapitools/openapi-generator
 */

/**
 * Adobe Experience Manager (AEM) API
 *
 * Swagger AEM is an OpenAPI specification for Adobe Experience Manager (AEM) API
 * OpenAPI spec version: 3.2.0-pre.0
 * Contact: opensource@shinesolutions.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

/**
 * NOTE: This class is auto generated by the openapi generator program.
 * https://github.com/openapitools/openapi-generator
 * Do not edit the class manually.
 */
namespace OpenAPIServer\Api;

use OpenAPIServer\AbstractApiController;

/**
 * CustomApi Class Doc Comment
 *
 * PHP version 5
 *
 * @category Class
 * @package  OpenAPIServer\Api
 * @author   OpenAPI Generator team
 * @link     https://github.com/openapitools/openapi-generator
 */
class CustomApi extends AbstractApiController {

    /**
     * GET getAemHealthCheck
     * Summary: 
     * Notes: 
     * Output-Formats: [application/json]
     *
     * @param \Psr\Http\Message\ServerRequestInterface $request  Request
     * @param \Psr\Http\Message\ResponseInterface      $response Response
     * @param array|null                               $args     Path arguments
     */
    public function getAemHealthCheck($request, $response, $args) {
        $queryParams = $request->getQueryParams();
        $tags = $request->getQueryParam('tags');
        $combineTagsOr = $request->getQueryParam('combineTagsOr');
        $response->write('How about implementing getAemHealthCheck as a GET method ?');
        return $response;
    }
    
    /**
     * POST postConfigAemHealthCheckServlet
     * Summary: 
     * Notes: 
     *
     * @param \Psr\Http\Message\ServerRequestInterface $request  Request
     * @param \Psr\Http\Message\ResponseInterface      $response Response
     * @param array|null                               $args     Path arguments
     */
    public function postConfigAemHealthCheckServlet($request, $response, $args) {
        $queryParams = $request->getQueryParams();
        $bundlesIgnored = $request->getQueryParam('bundles.ignored');
        $bundlesIgnoredTypeHint = $request->getQueryParam('bundles.ignored@TypeHint');
        $response->write('How about implementing postConfigAemHealthCheckServlet as a POST method ?');
        return $response;
    }
    
    /**
     * POST postConfigAemPasswordReset
     * Summary: 
     * Notes: 
     *
     * @param \Psr\Http\Message\ServerRequestInterface $request  Request
     * @param \Psr\Http\Message\ResponseInterface      $response Response
     * @param array|null                               $args     Path arguments
     */
    public function postConfigAemPasswordReset($request, $response, $args) {
        $queryParams = $request->getQueryParams();
        $pwdresetAuthorizables = $request->getQueryParam('pwdreset.authorizables');
        $pwdresetAuthorizablesTypeHint = $request->getQueryParam('pwdreset.authorizables@TypeHint');
        $response->write('How about implementing postConfigAemPasswordReset as a POST method ?');
        return $response;
    }
    
}
