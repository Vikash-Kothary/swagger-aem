/*
 * Adobe Experience Manager (AEM) API
 *
 * Swagger AEM is an OpenAPI specification for Adobe Experience Manager (AEM) API
 *
 * OpenAPI spec version: 3.2.0-pre.0
 * Contact: opensource@shinesolutions.com
 * Generated by: https://openapi-generator.tech
 */

using System;
using System.Collections.Generic;
using Microsoft.AspNetCore.Mvc;
using Swashbuckle.AspNetCore.SwaggerGen;
using Newtonsoft.Json;
using System.ComponentModel.DataAnnotations;
using Org.OpenAPITools.Attributes;
using Org.OpenAPITools.Models;

namespace Org.OpenAPITools.Controllers
{ 
    /// <summary>
    /// 
    /// </summary>
    public class ConsoleApiController : Controller
    { 
        /// <summary>
        /// 
        /// </summary>
        /// <response code="0">Default response</response>
        [HttpGet]
        [Route("//system/console/status-productinfo.json")]
        [ValidateModelState]
        [SwaggerOperation("GetAemProductInfo")]
        [SwaggerResponse(statusCode: 0, type: typeof(List<string>), description: "Default response")]
        public virtual IActionResult GetAemProductInfo()
        { 
            //TODO: Uncomment the next line to return response 0 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(0, default(List<string>));

            string exampleJson = null;
            exampleJson = "\"\"";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<List<string>>(exampleJson)
            : default(List<string>);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// 
        /// </summary>
        /// <response code="200">OK</response>
        /// <response code="5XX">Unexpected error.</response>
        [HttpGet]
        [Route("//system/console/configMgr")]
        [ValidateModelState]
        [SwaggerOperation("GetConfigMgr")]
        [SwaggerResponse(statusCode: 200, type: typeof(string), description: "OK")]
        public virtual IActionResult GetConfigMgr()
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(string));

            //TODO: Uncomment the next line to return response 5XX or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(5XX);

            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<string>(exampleJson)
            : default(string);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// 
        /// </summary>
        /// <param name="name"></param>
        /// <param name="action"></param>
        /// <response code="0">Default response</response>
        [HttpPost]
        [Route("//system/console/bundles/{name}")]
        [ValidateModelState]
        [SwaggerOperation("PostBundle")]
        public virtual IActionResult PostBundle([FromRoute][Required]string name, [FromQuery][Required()]string action)
        { 
            //TODO: Uncomment the next line to return response 0 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(0);


            throw new NotImplementedException();
        }

        /// <summary>
        /// 
        /// </summary>
        /// <param name="action"></param>
        /// <response code="0">Default response</response>
        [HttpPost]
        [Route("//system/console/jmx/com.adobe.granite:type=Repository/op/{action}")]
        [ValidateModelState]
        [SwaggerOperation("PostJmxRepository")]
        public virtual IActionResult PostJmxRepository([FromRoute][Required]string action)
        { 
            //TODO: Uncomment the next line to return response 0 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(0);


            throw new NotImplementedException();
        }

        /// <summary>
        /// 
        /// </summary>
        /// <param name="post"></param>
        /// <param name="apply"></param>
        /// <param name="delete"></param>
        /// <param name="action"></param>
        /// <param name="location"></param>
        /// <param name="path"></param>
        /// <param name="serviceRanking"></param>
        /// <param name="idpUrl"></param>
        /// <param name="idpCertAlias"></param>
        /// <param name="idpHttpRedirect"></param>
        /// <param name="serviceProviderEntityId"></param>
        /// <param name="assertionConsumerServiceURL"></param>
        /// <param name="spPrivateKeyAlias"></param>
        /// <param name="keyStorePassword"></param>
        /// <param name="defaultRedirectUrl"></param>
        /// <param name="userIDAttribute"></param>
        /// <param name="useEncryption"></param>
        /// <param name="createUser"></param>
        /// <param name="addGroupMemberships"></param>
        /// <param name="groupMembershipAttribute"></param>
        /// <param name="defaultGroups"></param>
        /// <param name="nameIdFormat"></param>
        /// <param name="synchronizeAttributes"></param>
        /// <param name="handleLogout"></param>
        /// <param name="logoutUrl"></param>
        /// <param name="clockTolerance"></param>
        /// <param name="digestMethod"></param>
        /// <param name="signatureMethod"></param>
        /// <param name="userIntermediatePath"></param>
        /// <param name="propertylist"></param>
        /// <response code="200">Retrieved AEM SAML Configuration</response>
        /// <response code="302">Default response</response>
        /// <response code="0">Default response</response>
        [HttpPost]
        [Route("//system/console/configMgr/com.adobe.granite.auth.saml.SamlAuthenticationHandler")]
        [ValidateModelState]
        [SwaggerOperation("PostSamlConfiguration")]
        [SwaggerResponse(statusCode: 200, type: typeof(SamlConfigurationInfo), description: "Retrieved AEM SAML Configuration")]
        [SwaggerResponse(statusCode: 302, type: typeof(string), description: "Default response")]
        [SwaggerResponse(statusCode: 0, type: typeof(string), description: "Default response")]
        public virtual IActionResult PostSamlConfiguration([FromQuery]bool? post, [FromQuery]bool? apply, [FromQuery]bool? delete, [FromQuery]string action, [FromQuery]string location, [FromQuery]List<string> path, [FromQuery]int? serviceRanking, [FromQuery]string idpUrl, [FromQuery]string idpCertAlias, [FromQuery]bool? idpHttpRedirect, [FromQuery]string serviceProviderEntityId, [FromQuery]string assertionConsumerServiceURL, [FromQuery]string spPrivateKeyAlias, [FromQuery]string keyStorePassword, [FromQuery]string defaultRedirectUrl, [FromQuery]string userIDAttribute, [FromQuery]bool? useEncryption, [FromQuery]bool? createUser, [FromQuery]bool? addGroupMemberships, [FromQuery]string groupMembershipAttribute, [FromQuery]List<string> defaultGroups, [FromQuery]string nameIdFormat, [FromQuery]List<string> synchronizeAttributes, [FromQuery]bool? handleLogout, [FromQuery]string logoutUrl, [FromQuery]int? clockTolerance, [FromQuery]string digestMethod, [FromQuery]string signatureMethod, [FromQuery]string userIntermediatePath, [FromQuery]List<string> propertylist)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(SamlConfigurationInfo));

            //TODO: Uncomment the next line to return response 302 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(302, default(string));

            //TODO: Uncomment the next line to return response 0 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(0, default(string));

            string exampleJson = null;
            exampleJson = "";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<SamlConfigurationInfo>(exampleJson)
            : default(SamlConfigurationInfo);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }
    }
}
