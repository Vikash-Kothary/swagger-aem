//
// SamlConfigurationProperties.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation



public struct SamlConfigurationProperties: Codable {

    public var path: SamlConfigurationPropertyItemsArray?
    public var serviceRanking: SamlConfigurationPropertyItemsLong?
    public var idpUrl: SamlConfigurationPropertyItemsString?
    public var idpCertAlias: SamlConfigurationPropertyItemsString?
    public var idpHttpRedirect: SamlConfigurationPropertyItemsBoolean?
    public var serviceProviderEntityId: SamlConfigurationPropertyItemsString?
    public var assertionConsumerServiceURL: SamlConfigurationPropertyItemsString?
    public var spPrivateKeyAlias: SamlConfigurationPropertyItemsString?
    public var keyStorePassword: SamlConfigurationPropertyItemsString?
    public var defaultRedirectUrl: SamlConfigurationPropertyItemsString?
    public var userIDAttribute: SamlConfigurationPropertyItemsString?
    public var useEncryption: SamlConfigurationPropertyItemsBoolean?
    public var createUser: SamlConfigurationPropertyItemsBoolean?
    public var addGroupMemberships: SamlConfigurationPropertyItemsBoolean?
    public var groupMembershipAttribute: SamlConfigurationPropertyItemsString?
    public var defaultGroups: SamlConfigurationPropertyItemsArray?
    public var nameIdFormat: SamlConfigurationPropertyItemsString?
    public var synchronizeAttributes: SamlConfigurationPropertyItemsArray?
    public var handleLogout: SamlConfigurationPropertyItemsBoolean?
    public var logoutUrl: SamlConfigurationPropertyItemsString?
    public var clockTolerance: SamlConfigurationPropertyItemsLong?
    public var digestMethod: SamlConfigurationPropertyItemsString?
    public var signatureMethod: SamlConfigurationPropertyItemsString?
    public var userIntermediatePath: SamlConfigurationPropertyItemsString?

    public init(path: SamlConfigurationPropertyItemsArray?, serviceRanking: SamlConfigurationPropertyItemsLong?, idpUrl: SamlConfigurationPropertyItemsString?, idpCertAlias: SamlConfigurationPropertyItemsString?, idpHttpRedirect: SamlConfigurationPropertyItemsBoolean?, serviceProviderEntityId: SamlConfigurationPropertyItemsString?, assertionConsumerServiceURL: SamlConfigurationPropertyItemsString?, spPrivateKeyAlias: SamlConfigurationPropertyItemsString?, keyStorePassword: SamlConfigurationPropertyItemsString?, defaultRedirectUrl: SamlConfigurationPropertyItemsString?, userIDAttribute: SamlConfigurationPropertyItemsString?, useEncryption: SamlConfigurationPropertyItemsBoolean?, createUser: SamlConfigurationPropertyItemsBoolean?, addGroupMemberships: SamlConfigurationPropertyItemsBoolean?, groupMembershipAttribute: SamlConfigurationPropertyItemsString?, defaultGroups: SamlConfigurationPropertyItemsArray?, nameIdFormat: SamlConfigurationPropertyItemsString?, synchronizeAttributes: SamlConfigurationPropertyItemsArray?, handleLogout: SamlConfigurationPropertyItemsBoolean?, logoutUrl: SamlConfigurationPropertyItemsString?, clockTolerance: SamlConfigurationPropertyItemsLong?, digestMethod: SamlConfigurationPropertyItemsString?, signatureMethod: SamlConfigurationPropertyItemsString?, userIntermediatePath: SamlConfigurationPropertyItemsString?) {
        self.path = path
        self.serviceRanking = serviceRanking
        self.idpUrl = idpUrl
        self.idpCertAlias = idpCertAlias
        self.idpHttpRedirect = idpHttpRedirect
        self.serviceProviderEntityId = serviceProviderEntityId
        self.assertionConsumerServiceURL = assertionConsumerServiceURL
        self.spPrivateKeyAlias = spPrivateKeyAlias
        self.keyStorePassword = keyStorePassword
        self.defaultRedirectUrl = defaultRedirectUrl
        self.userIDAttribute = userIDAttribute
        self.useEncryption = useEncryption
        self.createUser = createUser
        self.addGroupMemberships = addGroupMemberships
        self.groupMembershipAttribute = groupMembershipAttribute
        self.defaultGroups = defaultGroups
        self.nameIdFormat = nameIdFormat
        self.synchronizeAttributes = synchronizeAttributes
        self.handleLogout = handleLogout
        self.logoutUrl = logoutUrl
        self.clockTolerance = clockTolerance
        self.digestMethod = digestMethod
        self.signatureMethod = signatureMethod
        self.userIntermediatePath = userIntermediatePath
    }

    public enum CodingKeys: String, CodingKey { 
        case path
        case serviceRanking = "service.ranking"
        case idpUrl
        case idpCertAlias
        case idpHttpRedirect
        case serviceProviderEntityId
        case assertionConsumerServiceURL
        case spPrivateKeyAlias
        case keyStorePassword
        case defaultRedirectUrl
        case userIDAttribute
        case useEncryption
        case createUser
        case addGroupMemberships
        case groupMembershipAttribute
        case defaultGroups
        case nameIdFormat
        case synchronizeAttributes
        case handleLogout
        case logoutUrl
        case clockTolerance
        case digestMethod
        case signatureMethod
        case userIntermediatePath
    }


}

