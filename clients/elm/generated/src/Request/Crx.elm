{-
   Adobe Experience Manager (AEM) API
   Swagger AEM is an OpenAPI specification for Adobe Experience Manager (AEM) API

   OpenAPI spec version: 3.2.0-pre.0
   Contact: opensource@shinesolutions.com

   NOTE: This file is auto generated by the openapi-generator.
   https://github.com/openapitools/openapi-generator.git
   Do not edit this file manually.
-}


module Request.Crx exposing (getCrxdeStatus, getInstallStatus, getPackageManagerServlet, postPackageService, postPackageServiceJson, postPackageUpdate, postSetPassword)

import Data.InstallStatus exposing (InstallStatus, installStatusDecoder)
import Dict
import Http
import Json.Decode as Decode


basePath : String
basePath =
    "http://localhost"


getCrxdeStatus : Http.Request String
getCrxdeStatus =
    { method = "GET"
    , url = basePath ++ "/crx/server/crx.default/jcr:root/.1.json"
    , headers = []
    , body = Http.emptyBody
    , expect = Http.expectJson Decode.string
    , timeout = Just 30000
    , withCredentials = False
    }
        |> Http.request


getInstallStatus : Http.Request InstallStatus
getInstallStatus =
    { method = "GET"
    , url = basePath ++ "/crx/packmgr/installstatus.jsp"
    , headers = []
    , body = Http.emptyBody
    , expect = Http.expectJson installStatusDecoder
    , timeout = Just 30000
    , withCredentials = False
    }
        |> Http.request


getPackageManagerServlet : Http.Request String
getPackageManagerServlet =
    { method = "GET"
    , url = basePath ++ "/crx/packmgr/service/script.html"
    , headers = []
    , body = Http.emptyBody
    , expect = Http.expectJson Decode.string
    , timeout = Just 30000
    , withCredentials = False
    }
        |> Http.request


postPackageService : Http.Request String
postPackageService =
    { method = "POST"
    , url = basePath ++ "/crx/packmgr/service.jsp"
    , headers = []
    , body = Http.emptyBody
    , expect = Http.expectJson Decode.string
    , timeout = Just 30000
    , withCredentials = False
    }
        |> Http.request


postPackageServiceJson : String -> Http.Request String
postPackageServiceJson path =
    { method = "POST"
    , url = basePath ++ "/crx/packmgr/service/.json/" ++ path
    , headers = []
    , body = Http.emptyBody
    , expect = Http.expectJson Decode.string
    , timeout = Just 30000
    , withCredentials = False
    }
        |> Http.request


postPackageUpdate : Http.Request String
postPackageUpdate =
    { method = "POST"
    , url = basePath ++ "/crx/packmgr/update.jsp"
    , headers = []
    , body = Http.emptyBody
    , expect = Http.expectJson Decode.string
    , timeout = Just 30000
    , withCredentials = False
    }
        |> Http.request


postSetPassword : Http.Request String
postSetPassword =
    { method = "POST"
    , url = basePath ++ "/crx/explorer/ui/setpassword.jsp"
    , headers = []
    , body = Http.emptyBody
    , expect = Http.expectJson Decode.string
    , timeout = Just 30000
    , withCredentials = False
    }
        |> Http.request
