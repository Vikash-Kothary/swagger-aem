{-
   Adobe Experience Manager (AEM) API
   Swagger AEM is an OpenAPI specification for Adobe Experience Manager (AEM) API

   OpenAPI spec version: 3.2.0-pre.0
   Contact: opensource@shinesolutions.com

   NOTE: This file is auto generated by the openapi-generator.
   https://github.com/openapitools/openapi-generator.git
   Do not edit this file manually.
-}


module Request.Console exposing (getAemProductInfo, getConfigMgr, postBundle, postJmxRepository, postSamlConfiguration)

import Data.SamlConfigurationInfo exposing (SamlConfigurationInfo, samlConfigurationInfoDecoder)
import Dict
import Http
import Json.Decode as Decode


basePath : String
basePath =
    "http://localhost"


getAemProductInfo : Http.Request (List String)
getAemProductInfo =
    { method = "GET"
    , url = basePath ++ "/system/console/status-productinfo.json"
    , headers = []
    , body = Http.emptyBody
    , expect = Http.expectJson (Decode.list Decode.string)
    , timeout = Just 30000
    , withCredentials = False
    }
        |> Http.request


getConfigMgr : Http.Request String
getConfigMgr =
    { method = "GET"
    , url = basePath ++ "/system/console/configMgr"
    , headers = []
    , body = Http.emptyBody
    , expect = Http.expectJson Decode.string
    , timeout = Just 30000
    , withCredentials = False
    }
        |> Http.request


postBundle : String -> Http.Request ()
postBundle name =
    { method = "POST"
    , url = basePath ++ "/system/console/bundles/" ++ name
    , headers = []
    , body = Http.emptyBody
    , expect = Http.expectStringResponse (\_ -> Ok ())
    , timeout = Just 30000
    , withCredentials = False
    }
        |> Http.request


postJmxRepository : String -> Http.Request ()
postJmxRepository action =
    { method = "POST"
    , url = basePath ++ "/system/console/jmx/com.adobe.granite:type=Repository/op/" ++ action
    , headers = []
    , body = Http.emptyBody
    , expect = Http.expectStringResponse (\_ -> Ok ())
    , timeout = Just 30000
    , withCredentials = False
    }
        |> Http.request


postSamlConfiguration : Http.Request SamlConfigurationInfo
postSamlConfiguration =
    { method = "POST"
    , url = basePath ++ "/system/console/configMgr/com.adobe.granite.auth.saml.SamlAuthenticationHandler"
    , headers = []
    , body = Http.emptyBody
    , expect = Http.expectJson samlConfigurationInfoDecoder
    , timeout = Just 30000
    , withCredentials = False
    }
        |> Http.request
