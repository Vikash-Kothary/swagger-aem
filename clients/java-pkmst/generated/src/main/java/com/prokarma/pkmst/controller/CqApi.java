/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech) (3.2.1-SNAPSHOT).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
package com.prokarma.pkmst.controller;


import io.swagger.annotations.*;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RequestPart;
import org.springframework.web.multipart.MultipartFile;
import java.io.IOException;

import java.util.List;
/**
 * Provides the info about api methods
 * @author pkmst
 *
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaPKMSTServerCodegen", date = "2019-08-04T23:41:29.600Z[GMT]")

@Api(value = "Cq", description = "the Cq API")
public interface CqApi {

    @ApiOperation(value = "", notes = "", response = String.class, tags={ "cq", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    @RequestMapping(value = "/libs/granite/core/content/login.html",
        produces = { "text/html" }, 
        method = RequestMethod.GET)
    ResponseEntity<String> getLoginPage( @RequestHeader(value = "Accept", required = false) String accept) throws Exception;


    @ApiOperation(value = "", notes = "", response = Void.class, authorizations = {
        @Authorization(value = "aemAuth")
    }, tags={ "cq", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Default response") })
    @RequestMapping(value = "/.cqactions.html",
        method = RequestMethod.POST)
    ResponseEntity<Void> postCqActions(@ApiParam(value = "", required = true)  @RequestParam(value = "authorizableId", required = true) String authorizableId,@ApiParam(value = "", required = true)  @RequestParam(value = "changelog", required = true) String changelog, @RequestHeader(value = "Accept", required = false) String accept) throws Exception;

}
