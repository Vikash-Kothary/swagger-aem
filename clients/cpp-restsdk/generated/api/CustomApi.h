/**
 * Adobe Experience Manager (AEM) API
 * Swagger AEM is an OpenAPI specification for Adobe Experience Manager (AEM) API
 *
 * OpenAPI spec version: 3.2.0-pre.0
 * Contact: opensource@shinesolutions.com
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 3.2.1-SNAPSHOT.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * CustomApi.h
 *
 * 
 */

#ifndef ORG_OPENAPITOOLS_CLIENT_API_CustomApi_H_
#define ORG_OPENAPITOOLS_CLIENT_API_CustomApi_H_


#include "../ApiClient.h"

#include <cpprest/details/basic_types.h>

#include <boost/optional.hpp>

namespace org {
namespace openapitools {
namespace client {
namespace api {

using namespace org::openapitools::client::model;



class  CustomApi 
{
public:

    explicit CustomApi( std::shared_ptr<ApiClient> apiClient );

    virtual ~CustomApi() = default;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="tags"> (optional)</param>
    /// <param name="combineTagsOr"> (optional)</param>
    pplx::task<utility::string_t> getAemHealthCheck(
        boost::optional<utility::string_t> tags,
        boost::optional<bool> combineTagsOr
    );
    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="bundlesPeriodignored"> (optional)</param>
    /// <param name="bundlesPeriodignoredAtTypeHint"> (optional)</param>
    pplx::task<void> postConfigAemHealthCheckServlet(
        boost::optional<std::vector<utility::string_t>> bundlesPeriodignored,
        boost::optional<utility::string_t> bundlesPeriodignoredAtTypeHint
    );
    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="pwdresetPeriodauthorizables"> (optional)</param>
    /// <param name="pwdresetPeriodauthorizablesAtTypeHint"> (optional)</param>
    pplx::task<void> postConfigAemPasswordReset(
        boost::optional<std::vector<utility::string_t>> pwdresetPeriodauthorizables,
        boost::optional<utility::string_t> pwdresetPeriodauthorizablesAtTypeHint
    );

protected:
    std::shared_ptr<ApiClient> m_ApiClient;
};

}
}
}
}

#endif /* ORG_OPENAPITOOLS_CLIENT_API_CustomApi_H_ */

