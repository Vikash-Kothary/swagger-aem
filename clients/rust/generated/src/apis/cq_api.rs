/* 
 * Adobe Experience Manager (AEM) API
 *
 * Swagger AEM is an OpenAPI specification for Adobe Experience Manager (AEM) API
 *
 * OpenAPI spec version: 3.2.0-pre.0
 * Contact: opensource@shinesolutions.com
 * Generated by: https://openapi-generator.tech
 */

use std::rc::Rc;
use std::borrow::Borrow;

use hyper;
use serde_json;
use futures::Future;

use super::{Error, configuration};
use super::request as __internal_request;

pub struct CqApiClient<C: hyper::client::Connect> {
    configuration: Rc<configuration::Configuration<C>>,
}

impl<C: hyper::client::Connect> CqApiClient<C> {
    pub fn new(configuration: Rc<configuration::Configuration<C>>) -> CqApiClient<C> {
        CqApiClient {
            configuration: configuration,
        }
    }
}

pub trait CqApi {
    fn get_login_page(&self, ) -> Box<Future<Item = String, Error = Error<serde_json::Value>>>;
    fn post_cq_actions(&self, authorizable_id: &str, changelog: &str) -> Box<Future<Item = (), Error = Error<serde_json::Value>>>;
}


impl<C: hyper::client::Connect>CqApi for CqApiClient<C> {
    fn get_login_page(&self, ) -> Box<Future<Item = String, Error = Error<serde_json::Value>>> {
        __internal_request::Request::new(hyper::Method::Get, "/libs/granite/core/content/login.html".to_string())
            .execute(self.configuration.borrow())
    }

    fn post_cq_actions(&self, authorizable_id: &str, changelog: &str) -> Box<Future<Item = (), Error = Error<serde_json::Value>>> {
        __internal_request::Request::new(hyper::Method::Post, "/.cqactions.html".to_string())
            .with_auth(__internal_request::Auth::Basic)
            .with_query_param("authorizableId".to_string(), authorizable_id.to_string())
            .with_query_param("changelog".to_string(), changelog.to_string())
            .returns_nothing()
            .execute(self.configuration.borrow())
    }

}
