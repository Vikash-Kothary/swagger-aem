/**
 * Adobe Experience Manager (AEM) API
 * Swagger AEM is an OpenAPI specification for Adobe Experience Manager (AEM) API
 *
 * OpenAPI spec version: 3.2.0-pre.0
 * Contact: opensource@shinesolutions.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


#include "OAIInstallStatus.h"

#include "OAIHelpers.h"

#include <QJsonDocument>
#include <QJsonArray>
#include <QObject>
#include <QDebug>

namespace OpenAPI {

OAIInstallStatus::OAIInstallStatus(QString json) {
    init();
    this->fromJson(json);
}

OAIInstallStatus::OAIInstallStatus() {
    init();
}

OAIInstallStatus::~OAIInstallStatus() {
    this->cleanup();
}

void
OAIInstallStatus::init() {
    status = new OAIInstallStatus_status();
    m_status_isSet = false;
}

void
OAIInstallStatus::cleanup() {
    if(status != nullptr) { 
        delete status;
    }
}

OAIInstallStatus*
OAIInstallStatus::fromJson(QString json) {
    QByteArray array (json.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
    return this;
}

void
OAIInstallStatus::fromJsonObject(QJsonObject pJson) {
    ::OpenAPI::setValue(&status, pJson["status"], "OAIInstallStatus_status", "OAIInstallStatus_status");
    
}

QString
OAIInstallStatus::asJson ()
{
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject
OAIInstallStatus::asJsonObject() {
    QJsonObject obj;
    if((status != nullptr) && (status->isSet())){
        toJsonValue(QString("status"), status, obj, QString("OAIInstallStatus_status"));
    }

    return obj;
}

OAIInstallStatus_status*
OAIInstallStatus::getStatus() {
    return status;
}
void
OAIInstallStatus::setStatus(OAIInstallStatus_status* status) {
    this->status = status;
    this->m_status_isSet = true;
}


bool
OAIInstallStatus::isSet(){
    bool isObjectUpdated = false;
    do{
        if(status != nullptr && status->isSet()){ isObjectUpdated = true; break;}
    }while(false);
    return isObjectUpdated;
}
}

