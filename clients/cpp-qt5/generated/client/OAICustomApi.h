/**
 * Adobe Experience Manager (AEM) API
 * Swagger AEM is an OpenAPI specification for Adobe Experience Manager (AEM) API
 *
 * OpenAPI spec version: 3.2.0-pre.0
 * Contact: opensource@shinesolutions.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#ifndef _OAI_OAICustomApi_H_
#define _OAI_OAICustomApi_H_

#include "OAIHttpRequest.h"

#include <QString>

#include <QObject>

namespace OpenAPI {

class OAICustomApi: public QObject {
    Q_OBJECT

public:
    OAICustomApi();
    OAICustomApi(QString host, QString basePath);
    ~OAICustomApi();

    QString host;
    QString basePath;
    QMap<QString, QString> defaultHeaders;

    void getAemHealthCheck(QString* tags, bool combine_tags_or);
    void postConfigAemHealthCheckServlet(QList<QString*>* bundles_ignored, QString* bundles_ignored_type_hint);
    void postConfigAemPasswordReset(QList<QString*>* pwdreset_authorizables, QString* pwdreset_authorizables_type_hint);
    
private:
    void getAemHealthCheckCallback (OAIHttpRequestWorker * worker);
    void postConfigAemHealthCheckServletCallback (OAIHttpRequestWorker * worker);
    void postConfigAemPasswordResetCallback (OAIHttpRequestWorker * worker);
    
signals:
    void getAemHealthCheckSignal(QString* summary);
    void postConfigAemHealthCheckServletSignal();
    void postConfigAemPasswordResetSignal();
    
    void getAemHealthCheckSignalE(QString* summary, QNetworkReply::NetworkError error_type, QString& error_str);
    void postConfigAemHealthCheckServletSignalE(QNetworkReply::NetworkError error_type, QString& error_str);
    void postConfigAemPasswordResetSignalE(QNetworkReply::NetworkError error_type, QString& error_str);
    
    void getAemHealthCheckSignalEFull(OAIHttpRequestWorker* worker, QNetworkReply::NetworkError error_type, QString& error_str);
    void postConfigAemHealthCheckServletSignalEFull(OAIHttpRequestWorker* worker, QNetworkReply::NetworkError error_type, QString& error_str);
    void postConfigAemPasswordResetSignalEFull(OAIHttpRequestWorker* worker, QNetworkReply::NetworkError error_type, QString& error_str);
    
};

}
#endif
