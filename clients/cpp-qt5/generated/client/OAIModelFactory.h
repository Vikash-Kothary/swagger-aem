/**
 * Adobe Experience Manager (AEM) API
 * Swagger AEM is an OpenAPI specification for Adobe Experience Manager (AEM) API
 *
 * OpenAPI spec version: 3.2.0-pre.0
 * Contact: opensource@shinesolutions.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#ifndef ModelFactory_H_
#define ModelFactory_H_

#include "OAIObject.h"

#include "OAIInstallStatus.h"
#include "OAIInstallStatus_status.h"
#include "OAIKeystoreChainItems.h"
#include "OAIKeystoreInfo.h"
#include "OAIKeystoreItems.h"
#include "OAISamlConfigurationInfo.h"
#include "OAISamlConfigurationProperties.h"
#include "OAISamlConfigurationPropertyItemsArray.h"
#include "OAISamlConfigurationPropertyItemsBoolean.h"
#include "OAISamlConfigurationPropertyItemsLong.h"
#include "OAISamlConfigurationPropertyItemsString.h"
#include "OAITruststoreInfo.h"
#include "OAITruststoreItems.h"

namespace OpenAPI {

  inline void* create(QString type) {
    if(QString("OAIInstallStatus").compare(type) == 0) {
      return new OAIInstallStatus();
    }
    if(QString("OAIInstallStatus_status").compare(type) == 0) {
      return new OAIInstallStatus_status();
    }
    if(QString("OAIKeystoreChainItems").compare(type) == 0) {
      return new OAIKeystoreChainItems();
    }
    if(QString("OAIKeystoreInfo").compare(type) == 0) {
      return new OAIKeystoreInfo();
    }
    if(QString("OAIKeystoreItems").compare(type) == 0) {
      return new OAIKeystoreItems();
    }
    if(QString("OAISamlConfigurationInfo").compare(type) == 0) {
      return new OAISamlConfigurationInfo();
    }
    if(QString("OAISamlConfigurationProperties").compare(type) == 0) {
      return new OAISamlConfigurationProperties();
    }
    if(QString("OAISamlConfigurationPropertyItemsArray").compare(type) == 0) {
      return new OAISamlConfigurationPropertyItemsArray();
    }
    if(QString("OAISamlConfigurationPropertyItemsBoolean").compare(type) == 0) {
      return new OAISamlConfigurationPropertyItemsBoolean();
    }
    if(QString("OAISamlConfigurationPropertyItemsLong").compare(type) == 0) {
      return new OAISamlConfigurationPropertyItemsLong();
    }
    if(QString("OAISamlConfigurationPropertyItemsString").compare(type) == 0) {
      return new OAISamlConfigurationPropertyItemsString();
    }
    if(QString("OAITruststoreInfo").compare(type) == 0) {
      return new OAITruststoreInfo();
    }
    if(QString("OAITruststoreItems").compare(type) == 0) {
      return new OAITruststoreItems();
    }
    
    return nullptr;
  }

  inline void* create(QString json, QString type) {
    if(type.startsWith("QString")) {
      return new QString();
    }    
    auto val = static_cast<OAIObject*>(create(type));
    if(val != nullptr) {
      return val->fromJson(json);
    }
    return nullptr;
  }

}

#endif /* ModelFactory_H_ */
