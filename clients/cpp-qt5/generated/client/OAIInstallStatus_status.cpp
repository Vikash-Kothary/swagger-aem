/**
 * Adobe Experience Manager (AEM) API
 * Swagger AEM is an OpenAPI specification for Adobe Experience Manager (AEM) API
 *
 * OpenAPI spec version: 3.2.0-pre.0
 * Contact: opensource@shinesolutions.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


#include "OAIInstallStatus_status.h"

#include "OAIHelpers.h"

#include <QJsonDocument>
#include <QJsonArray>
#include <QObject>
#include <QDebug>

namespace OpenAPI {

OAIInstallStatus_status::OAIInstallStatus_status(QString json) {
    init();
    this->fromJson(json);
}

OAIInstallStatus_status::OAIInstallStatus_status() {
    init();
}

OAIInstallStatus_status::~OAIInstallStatus_status() {
    this->cleanup();
}

void
OAIInstallStatus_status::init() {
    finished = false;
    m_finished_isSet = false;
    item_count = 0;
    m_item_count_isSet = false;
}

void
OAIInstallStatus_status::cleanup() {


}

OAIInstallStatus_status*
OAIInstallStatus_status::fromJson(QString json) {
    QByteArray array (json.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
    return this;
}

void
OAIInstallStatus_status::fromJsonObject(QJsonObject pJson) {
    ::OpenAPI::setValue(&finished, pJson["finished"], "bool", "");
    
    ::OpenAPI::setValue(&item_count, pJson["itemCount"], "qint32", "");
    
}

QString
OAIInstallStatus_status::asJson ()
{
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject
OAIInstallStatus_status::asJsonObject() {
    QJsonObject obj;
    if(m_finished_isSet){
        obj.insert("finished", QJsonValue(finished));
    }
    if(m_item_count_isSet){
        obj.insert("itemCount", QJsonValue(item_count));
    }

    return obj;
}

bool
OAIInstallStatus_status::isFinished() {
    return finished;
}
void
OAIInstallStatus_status::setFinished(bool finished) {
    this->finished = finished;
    this->m_finished_isSet = true;
}

qint32
OAIInstallStatus_status::getItemCount() {
    return item_count;
}
void
OAIInstallStatus_status::setItemCount(qint32 item_count) {
    this->item_count = item_count;
    this->m_item_count_isSet = true;
}


bool
OAIInstallStatus_status::isSet(){
    bool isObjectUpdated = false;
    do{
        if(m_finished_isSet){ isObjectUpdated = true; break;}
        if(m_item_count_isSet){ isObjectUpdated = true; break;}
    }while(false);
    return isObjectUpdated;
}
}

