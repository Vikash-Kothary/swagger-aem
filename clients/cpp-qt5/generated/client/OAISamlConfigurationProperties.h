/**
 * Adobe Experience Manager (AEM) API
 * Swagger AEM is an OpenAPI specification for Adobe Experience Manager (AEM) API
 *
 * OpenAPI spec version: 3.2.0-pre.0
 * Contact: opensource@shinesolutions.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAISamlConfigurationProperties.h
 *
 * 
 */

#ifndef OAISamlConfigurationProperties_H_
#define OAISamlConfigurationProperties_H_

#include <QJsonObject>


#include "OAIOAISamlConfigurationPropertyItemsArray.h"
#include "OAIOAISamlConfigurationPropertyItemsBoolean.h"
#include "OAIOAISamlConfigurationPropertyItemsLong.h"
#include "OAIOAISamlConfigurationPropertyItemsString.h"

#include "OAIObject.h"

namespace OpenAPI {

class OAISamlConfigurationProperties: public OAIObject {
public:
    OAISamlConfigurationProperties();
    OAISamlConfigurationProperties(QString json);
    ~OAISamlConfigurationProperties();
    void init();
    void cleanup();

    QString asJson () override;
    QJsonObject asJsonObject() override;
    void fromJsonObject(QJsonObject json) override;
    OAISamlConfigurationProperties* fromJson(QString jsonString) override;

    OAISamlConfigurationPropertyItemsArray* getPath();
    void setPath(OAISamlConfigurationPropertyItemsArray* path);

    OAISamlConfigurationPropertyItemsLong* getServiceRanking();
    void setServiceRanking(OAISamlConfigurationPropertyItemsLong* service_ranking);

    OAISamlConfigurationPropertyItemsString* getIdpUrl();
    void setIdpUrl(OAISamlConfigurationPropertyItemsString* idp_url);

    OAISamlConfigurationPropertyItemsString* getIdpCertAlias();
    void setIdpCertAlias(OAISamlConfigurationPropertyItemsString* idp_cert_alias);

    OAISamlConfigurationPropertyItemsBoolean* getIdpHttpRedirect();
    void setIdpHttpRedirect(OAISamlConfigurationPropertyItemsBoolean* idp_http_redirect);

    OAISamlConfigurationPropertyItemsString* getServiceProviderEntityId();
    void setServiceProviderEntityId(OAISamlConfigurationPropertyItemsString* service_provider_entity_id);

    OAISamlConfigurationPropertyItemsString* getAssertionConsumerServiceUrl();
    void setAssertionConsumerServiceUrl(OAISamlConfigurationPropertyItemsString* assertion_consumer_service_url);

    OAISamlConfigurationPropertyItemsString* getSpPrivateKeyAlias();
    void setSpPrivateKeyAlias(OAISamlConfigurationPropertyItemsString* sp_private_key_alias);

    OAISamlConfigurationPropertyItemsString* getKeyStorePassword();
    void setKeyStorePassword(OAISamlConfigurationPropertyItemsString* key_store_password);

    OAISamlConfigurationPropertyItemsString* getDefaultRedirectUrl();
    void setDefaultRedirectUrl(OAISamlConfigurationPropertyItemsString* default_redirect_url);

    OAISamlConfigurationPropertyItemsString* getUserIdAttribute();
    void setUserIdAttribute(OAISamlConfigurationPropertyItemsString* user_id_attribute);

    OAISamlConfigurationPropertyItemsBoolean* getUseEncryption();
    void setUseEncryption(OAISamlConfigurationPropertyItemsBoolean* use_encryption);

    OAISamlConfigurationPropertyItemsBoolean* getCreateUser();
    void setCreateUser(OAISamlConfigurationPropertyItemsBoolean* create_user);

    OAISamlConfigurationPropertyItemsBoolean* getAddGroupMemberships();
    void setAddGroupMemberships(OAISamlConfigurationPropertyItemsBoolean* add_group_memberships);

    OAISamlConfigurationPropertyItemsString* getGroupMembershipAttribute();
    void setGroupMembershipAttribute(OAISamlConfigurationPropertyItemsString* group_membership_attribute);

    OAISamlConfigurationPropertyItemsArray* getDefaultGroups();
    void setDefaultGroups(OAISamlConfigurationPropertyItemsArray* default_groups);

    OAISamlConfigurationPropertyItemsString* getNameIdFormat();
    void setNameIdFormat(OAISamlConfigurationPropertyItemsString* name_id_format);

    OAISamlConfigurationPropertyItemsArray* getSynchronizeAttributes();
    void setSynchronizeAttributes(OAISamlConfigurationPropertyItemsArray* synchronize_attributes);

    OAISamlConfigurationPropertyItemsBoolean* getHandleLogout();
    void setHandleLogout(OAISamlConfigurationPropertyItemsBoolean* handle_logout);

    OAISamlConfigurationPropertyItemsString* getLogoutUrl();
    void setLogoutUrl(OAISamlConfigurationPropertyItemsString* logout_url);

    OAISamlConfigurationPropertyItemsLong* getClockTolerance();
    void setClockTolerance(OAISamlConfigurationPropertyItemsLong* clock_tolerance);

    OAISamlConfigurationPropertyItemsString* getDigestMethod();
    void setDigestMethod(OAISamlConfigurationPropertyItemsString* digest_method);

    OAISamlConfigurationPropertyItemsString* getSignatureMethod();
    void setSignatureMethod(OAISamlConfigurationPropertyItemsString* signature_method);

    OAISamlConfigurationPropertyItemsString* getUserIntermediatePath();
    void setUserIntermediatePath(OAISamlConfigurationPropertyItemsString* user_intermediate_path);


    virtual bool isSet() override;

private:
    OAISamlConfigurationPropertyItemsArray* path;
    bool m_path_isSet;

    OAISamlConfigurationPropertyItemsLong* service_ranking;
    bool m_service_ranking_isSet;

    OAISamlConfigurationPropertyItemsString* idp_url;
    bool m_idp_url_isSet;

    OAISamlConfigurationPropertyItemsString* idp_cert_alias;
    bool m_idp_cert_alias_isSet;

    OAISamlConfigurationPropertyItemsBoolean* idp_http_redirect;
    bool m_idp_http_redirect_isSet;

    OAISamlConfigurationPropertyItemsString* service_provider_entity_id;
    bool m_service_provider_entity_id_isSet;

    OAISamlConfigurationPropertyItemsString* assertion_consumer_service_url;
    bool m_assertion_consumer_service_url_isSet;

    OAISamlConfigurationPropertyItemsString* sp_private_key_alias;
    bool m_sp_private_key_alias_isSet;

    OAISamlConfigurationPropertyItemsString* key_store_password;
    bool m_key_store_password_isSet;

    OAISamlConfigurationPropertyItemsString* default_redirect_url;
    bool m_default_redirect_url_isSet;

    OAISamlConfigurationPropertyItemsString* user_id_attribute;
    bool m_user_id_attribute_isSet;

    OAISamlConfigurationPropertyItemsBoolean* use_encryption;
    bool m_use_encryption_isSet;

    OAISamlConfigurationPropertyItemsBoolean* create_user;
    bool m_create_user_isSet;

    OAISamlConfigurationPropertyItemsBoolean* add_group_memberships;
    bool m_add_group_memberships_isSet;

    OAISamlConfigurationPropertyItemsString* group_membership_attribute;
    bool m_group_membership_attribute_isSet;

    OAISamlConfigurationPropertyItemsArray* default_groups;
    bool m_default_groups_isSet;

    OAISamlConfigurationPropertyItemsString* name_id_format;
    bool m_name_id_format_isSet;

    OAISamlConfigurationPropertyItemsArray* synchronize_attributes;
    bool m_synchronize_attributes_isSet;

    OAISamlConfigurationPropertyItemsBoolean* handle_logout;
    bool m_handle_logout_isSet;

    OAISamlConfigurationPropertyItemsString* logout_url;
    bool m_logout_url_isSet;

    OAISamlConfigurationPropertyItemsLong* clock_tolerance;
    bool m_clock_tolerance_isSet;

    OAISamlConfigurationPropertyItemsString* digest_method;
    bool m_digest_method_isSet;

    OAISamlConfigurationPropertyItemsString* signature_method;
    bool m_signature_method_isSet;

    OAISamlConfigurationPropertyItemsString* user_intermediate_path;
    bool m_user_intermediate_path_isSet;

};

}

#endif /* OAISamlConfigurationProperties_H_ */
