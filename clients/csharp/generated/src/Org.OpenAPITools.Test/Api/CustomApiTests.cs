/* 
 * Adobe Experience Manager (AEM) API
 *
 * Swagger AEM is an OpenAPI specification for Adobe Experience Manager (AEM) API
 *
 * OpenAPI spec version: 3.2.0-pre.0
 * Contact: opensource@shinesolutions.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using NUnit.Framework;

using Org.OpenAPITools.Client;
using Org.OpenAPITools.Api;

namespace Org.OpenAPITools.Test
{
    /// <summary>
    ///  Class for testing CustomApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    [TestFixture]
    public class CustomApiTests
    {
        private CustomApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [SetUp]
        public void Init()
        {
            instance = new CustomApi();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of CustomApi
        /// </summary>
        [Test]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOfType' CustomApi
            //Assert.IsInstanceOfType(typeof(CustomApi), instance, "instance is a CustomApi");
        }

        
        /// <summary>
        /// Test GetAemHealthCheck
        /// </summary>
        [Test]
        public void GetAemHealthCheckTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string tags = null;
            //bool? combineTagsOr = null;
            //var response = instance.GetAemHealthCheck(tags, combineTagsOr);
            //Assert.IsInstanceOf<string> (response, "response is string");
        }
        
        /// <summary>
        /// Test PostConfigAemHealthCheckServlet
        /// </summary>
        [Test]
        public void PostConfigAemHealthCheckServletTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //List<string> bundlesIgnored = null;
            //string bundlesIgnoredTypeHint = null;
            //instance.PostConfigAemHealthCheckServlet(bundlesIgnored, bundlesIgnoredTypeHint);
            
        }
        
        /// <summary>
        /// Test PostConfigAemPasswordReset
        /// </summary>
        [Test]
        public void PostConfigAemPasswordResetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //List<string> pwdresetAuthorizables = null;
            //string pwdresetAuthorizablesTypeHint = null;
            //instance.PostConfigAemPasswordReset(pwdresetAuthorizables, pwdresetAuthorizablesTypeHint);
            
        }
        
    }

}
