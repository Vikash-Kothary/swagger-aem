//
// CustomAPI.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
import Alamofire


open class CustomAPI: APIBase {
    /**
     - parameter tags: (query)  (optional)
     - parameter combineTagsOr: (query)  (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getAemHealthCheck(tags: String? = nil, combineTagsOr: Bool? = nil, completion: @escaping ((_ data: String?, _ error: ErrorResponse?) -> Void)) {
        getAemHealthCheckWithRequestBuilder(tags: tags, combineTagsOr: combineTagsOr).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     - GET /system/health
     - BASIC:
       - type: http
       - name: aemAuth
     - parameter tags: (query)  (optional)
     - parameter combineTagsOr: (query)  (optional)
     - returns: RequestBuilder<String> 
     */
    open class func getAemHealthCheckWithRequestBuilder(tags: String? = nil, combineTagsOr: Bool? = nil) -> RequestBuilder<String> {
        let path = "/system/health"
        let URLString = OpenAPIClientAPI.basePath + path
        let parameters: [String:Any]? = nil
        
        var url = URLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems(values:[
            "tags": tags,
            "combineTagsOr": combineTagsOr
        ])

        let requestBuilder: RequestBuilder<String>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }

    /**
     - parameter bundlesIgnored: (query)  (optional)
     - parameter bundlesIgnoredTypeHint: (query)  (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func postConfigAemHealthCheckServlet(bundlesIgnored: [String]? = nil, bundlesIgnoredTypeHint: String? = nil, completion: @escaping ((_ error: ErrorResponse?) -> Void)) {
        postConfigAemHealthCheckServletWithRequestBuilder(bundlesIgnored: bundlesIgnored, bundlesIgnoredTypeHint: bundlesIgnoredTypeHint).execute { (response, error) -> Void in
            completion(error)
        }
    }


    /**
     - POST /apps/system/config/com.shinesolutions.healthcheck.hc.impl.ActiveBundleHealthCheck
     - BASIC:
       - type: http
       - name: aemAuth
     - parameter bundlesIgnored: (query)  (optional)
     - parameter bundlesIgnoredTypeHint: (query)  (optional)
     - returns: RequestBuilder<Void> 
     */
    open class func postConfigAemHealthCheckServletWithRequestBuilder(bundlesIgnored: [String]? = nil, bundlesIgnoredTypeHint: String? = nil) -> RequestBuilder<Void> {
        let path = "/apps/system/config/com.shinesolutions.healthcheck.hc.impl.ActiveBundleHealthCheck"
        let URLString = OpenAPIClientAPI.basePath + path
        let parameters: [String:Any]? = nil
        
        var url = URLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems(values:[
            "bundles.ignored": bundlesIgnored,
            "bundles.ignored@TypeHint": bundlesIgnoredTypeHint
        ])

        let requestBuilder: RequestBuilder<Void>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }

    /**
     - parameter pwdresetAuthorizables: (query)  (optional)
     - parameter pwdresetAuthorizablesTypeHint: (query)  (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func postConfigAemPasswordReset(pwdresetAuthorizables: [String]? = nil, pwdresetAuthorizablesTypeHint: String? = nil, completion: @escaping ((_ error: ErrorResponse?) -> Void)) {
        postConfigAemPasswordResetWithRequestBuilder(pwdresetAuthorizables: pwdresetAuthorizables, pwdresetAuthorizablesTypeHint: pwdresetAuthorizablesTypeHint).execute { (response, error) -> Void in
            completion(error)
        }
    }


    /**
     - POST /apps/system/config/com.shinesolutions.aem.passwordreset.Activator
     - BASIC:
       - type: http
       - name: aemAuth
     - parameter pwdresetAuthorizables: (query)  (optional)
     - parameter pwdresetAuthorizablesTypeHint: (query)  (optional)
     - returns: RequestBuilder<Void> 
     */
    open class func postConfigAemPasswordResetWithRequestBuilder(pwdresetAuthorizables: [String]? = nil, pwdresetAuthorizablesTypeHint: String? = nil) -> RequestBuilder<Void> {
        let path = "/apps/system/config/com.shinesolutions.aem.passwordreset.Activator"
        let URLString = OpenAPIClientAPI.basePath + path
        let parameters: [String:Any]? = nil
        
        var url = URLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems(values:[
            "pwdreset.authorizables": pwdresetAuthorizables,
            "pwdreset.authorizables@TypeHint": pwdresetAuthorizablesTypeHint
        ])

        let requestBuilder: RequestBuilder<Void>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }

}
